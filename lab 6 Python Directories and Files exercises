
1) import os

def list_directories_and_files(path):
    print("Directories:")
    for item in os.listdir(path):
        if os.path.isdir(os.path.join(path, item)):
            print(item)

    print("\nFiles:")
    for item in os.listdir(path):
        if os.path.isfile(os.path.join(path, item)):
            print(item)

def list_all_directories_and_files(path):
    print("All Directories and Files:")
    for root, dirs, files in os.walk(path):
        for directory in dirs:
            print(os.path.join(root, directory))
        for file in files:
            print(os.path.join(root, file))

path = "/path/to/your/directory"

print("Listing only directories and files:")
list_directories_and_files(path)

print("\nListing all directories and files:")
list_all_directories_and_files(path)

2) import os

def check_path_access(path):
    if not os.path.exists(path):
        print(f"The path '{path}' does not exist.")
        return

    print(f"Path '{path}' exists.")

    if os.access(path, os.R_OK):
        print(f"Read access to '{path}' is granted.")
    else:
        print(f"No read access to '{path}'.")

    if os.access(path, os.W_OK):
        print(f"Write access to '{path}' is granted.")
    else:
        print(f"No write access to '{path}'.")

    if os.access(path, os.X_OK):
        print(f"Execute access to '{path}' is granted.")
    else:
        print(f"No execute access to '{path}'.")

path = "/path/to/your/directory_or_file"

check_path_access(path)

3) import os

def analyze_path(path):
    if not os.path.exists(path):
        print(f"The path '{path}' does not exist.")
        return

    print(f"The path '{path}' exists.")
    directory, filename = os.path.split(path)
    print(f"Directory: {directory}")
    print(f"Filename: {filename}")

path = "/path/to/your/file_or_directory"

analyze_path(path)

4) def count_lines(file_path):
    try:
        with open(file_path, 'r') as file:
            line_count = sum(1 for line in file)
            print(f"The number of lines in '{file_path}' is: {line_count}")
    except FileNotFoundError:
        print(f"File '{file_path}' not found.")

file_path = "/path/to/your/text/file.txt"
count_lines(file_path)

5) def write_list_to_file(file_path, data):
    try:
        with open(file_path, 'w') as file:
            for item in data:
                file.write(str(item) + '\n')
        print(f"The list has been successfully written to '{file_path}'.")
    except Exception as e:
        print(f"Error occurred: {e}")

# Example usage:
my_list = [1, 2, 3, 4, 5]
file_path = "/path/to/your/file.txt"
write_list_to_file(file_path, my_list)

> Бекжан:
6) import string

def generate_files():
    for letter in string.ascii_uppercase:
        file_name = letter + ".txt"
        with open(file_name, 'w') as file:
            file.write(f"This is file {file_name}.")

generate_files()

7) def copy_file(source_file, destination_file):
    try:
        with open(source_file, 'r') as source:
            with open(destination_file, 'w') as destination:
                destination.write(source.read())
        print(f"Contents of '{source_file}' have been copied to '{destination_file}' successfully.")
    except FileNotFoundError:
        print("File not found.")

# Example usage:
source_file = "/path/to/source/file.txt"
destination_file = "/path/to/destination/file.txt"
copy_file(source_file, destination_file)

8) import os

def delete_file(file_path):
    if not os.path.exists(file_path):
        print(f"The file '{file_path}' does not exist.")
        return

    if not os.access(file_path, os.W_OK):
        print(f"No write access to '{file_path}'. Cannot delete the file.")
        return

    try:
        os.remove(file_path)
        print(f"The file '{file_path}' has been successfully deleted.")
    except Exception as e:
        print(f"Error occurred: {e}")

# Example usage:
file_path = "/path/to/your/file.txt"
delete_file(file_path)
